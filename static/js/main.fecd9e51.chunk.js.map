{"version":3,"sources":["components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","get","process","sent","data","message","body","stop","props","children","Component","Consumer","Spinner","src","alt","style","width","margin","display","Track","_ref","track","artist_name","track_name","album_name","Link","to","track_id","Tracks","undefined","layout_Spinner","Fragment","map","item","tracks_Track","Search","trackTitle","onChange","e","defineProperty","target","name","findTrack","preventDefault","console","log","then","res","_this2","onSubmit","bind","placeholder","Index","tracks_Search","tracks_Tracks","Lyrics","match","params","id","lyrics","_this$state","day","moment","updated_time","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","format","App","context_Provider","HashRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fecd9e51.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar navbar-dark bg-dark bg-dark mb-5\">\r\n    <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_TRACKS\":\r\n      return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: \"Search Results\"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: \"Top 10 Tracks\",\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const result = await axios.get(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${\r\n        process.env.REACT_APP_MM_KEY\r\n      }`\r\n    );\r\n\r\n    this.setState({ track_list: result.data.message.body.track_list });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src=\"https://cdn.dribbble.com/users/2081/screenshots/2781462/dancing-lines.gif\"\r\n        alt=\"Loading..\"\r\n        style={{ width: \"200px\", margin: \"40px auto\", display: \"block\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Track = ({ track }) => {\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5>{track.artist_name}</h5>\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-play\" />\r\n              Track\r\n            </strong>\r\n            : {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className=\"fas fa-compact-disc\" />\r\n              Album\r\n            </strong>\r\n            : {track.album_name}\r\n          </p>\r\n          <Link\r\n            className=\"btn btn-dark btn-block\"\r\n            to={`lyrics/track/${track.track_id}`}\r\n          >\r\n            <i className=\"fas fa-chevron-right\" /> View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Track from \"./Track\";\r\n\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { track_list, heading } = value;\r\n          if (track_list === undefined || track_list.length === 0)\r\n            return <Spinner />;\r\n          return (\r\n            <React.Fragment>\r\n              <h3 className=\"text-center mb-4\">{heading}</h3>\r\n              <div className=\"row\">\r\n                {track_list.map(item => (\r\n                  <Track key={item.track.track_id} track={item.track} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    trackTitle: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  findTrack = (dispatch, e) => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${\r\n          this.state.trackTitle\r\n        }&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n          process.env.REACT_APP_MM_KEY\r\n        }`\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'SEARCH_TRACKS',\r\n          payload: res.data.message.body.track_list\r\n        })\r\n        this.setState({trackTitle: ''})\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <i className=\"fas fa-music\" /> Search For A Song\r\n              </h1>\r\n              <p className=\"lead text-center\">Get the lyrics for any song</p>\r\n              <form onSubmit={this.findTrack.bind(this,dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Song title...\"\r\n                    name=\"trackTitle\"\r\n                    value={this.state.trackTitle}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-primary btn-lg btn-block mb-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Get Track Lyrics{\" \"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Tracks from \"../tracks/Tracks\";\r\nimport Search from \"../tracks/Search\";\r\n\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Tracks />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../../components/layout/Spinner\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Lyrics extends Component {\r\n  state = {\r\n    track: {},\r\n    Lyrics: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //track.lyrics.get?track_id=15953433\r\n\r\n    const lyrics = await axios.get(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\r\n        this.props.match.params.id\r\n      }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n    );\r\n\r\n   \r\n    const track = await axios.get(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${\r\n        this.props.match.params.id\r\n      }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n    );\r\n\r\n   \r\n\r\n\r\n    //console.log(track.data.message.body.track.track_name)\r\n\r\n    this.setState({\r\n      lyrics: lyrics.data.message.body.lyrics,\r\n      track: track.data.message.body.track\r\n    });\r\n\r\n    //console.log(result.data.message.body.lyrics.lyrics_body)\r\n  }\r\n\r\n  render() {\r\n    const { track, lyrics } = this.state;\r\n    let day = moment(track.updated_time, \"MM-DD-YYYY\");\r\n    console.log(day);\r\n    // console.log(typeof track.updated_time);\r\n    return (\r\n      <React.Fragment>\r\n        {lyrics && track ? (\r\n          <React.Fragment>\r\n            <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\r\n              Go Back\r\n            </Link>\r\n            <div className=\"card\">\r\n              <h5 className=\"card-header\">\r\n                {track.track_name} by{\" \"}\r\n                <span className=\"text-secondary\">{track.artist_name}</span>\r\n              </h5>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n              </div>\r\n            </div>\r\n            <ul className=\"list-group mt-3\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Album ID</strong>: {track.album_id}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Song Genre</strong>:{\" \"}\r\n                {\r\n                  track.primary_genres.music_genre_list[0].music_genre\r\n                    .music_genre_name\r\n                }\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Explicit Words</strong>: {track.explicit ? \"No\" : \"Yes\"}\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <strong>Release Date</strong>:{\" \"}\r\n                {moment(track.updated_time).format(\"MM-DD-YYYY\")}\r\n              </li>\r\n            </ul>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Index from \"./components/layout/Index\";\nimport Lyrics from \"./components/tracks/Lyrics\";\n\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}